{"version":3,"names":["NativeModules","StripeTerminalReactNative","getConstants","FETCH_TOKEN_PROVIDER","CHANGE_CONNECTION_STATUS","CHANGE_PAYMENT_STATUS","FINISH_DISCOVERING_READERS","FINISH_INSTALLING_UPDATE","REQUEST_READER_DISPLAY_MESSAGE","REQUEST_READER_INPUT","REPORT_AVAILABLE_UPDATE","REPORT_UNEXPECTED_READER_DISCONNECT","REPORT_UPDATE_PROGRESS","START_INSTALLING_UPDATE","UPDATE_DISCOVERED_READERS","NOT_INITIALIZED_ERROR_MESSAGE","useStripeTerminal","props","StripeTerminalContext","setLoading","isInitialized","initialize","setConnectedReader","setDiscoveredReaders","connectedReader","discoveredReaders","loading","emitter","log","_isInitialized","onUpdateDiscoveredReaders","onFinishDiscoveringReaders","onDidFinishInstallingUpdate","onDidReportAvailableUpdate","onDidReportReaderSoftwareUpdateProgress","onDidReportUnexpectedReaderDisconnect","onDidStartInstallingUpdate","onDidRequestReaderInput","onDidRequestReaderDisplayMessage","onDidChangePaymentStatus","onDidChangeConnectionStatus","_discoverReaders","params","console","error","Error","response","didUpdateDiscoveredReaders","readers","didFinishDiscoveringReaders","result","didReportUnexpectedReaderDisconnect","didReportAvailableUpdate","didStartInstallingUpdate","didReportReaderSoftwareUpdateProgress","progress","didFinishInstallingUpdate","update","undefined","didRequestReaderInput","didRequestReaderDisplayMessage","didChangePaymentStatus","didChangeConnectionStatus","_initialize","errorMessage","code","message","reader","_cancelDiscovering","_connectBluetoothReader","_connectInternetReader","_connectUsbReader","_connectLocalMobileReader","_connectHandoffReader","_disconnectReader","_createPaymentIntent","_collectPaymentMethod","_retrievePaymentIntent","clientSecret","_getLocations","_processPayment","paymentIntentId","_createSetupIntent","_cancelPaymentIntent","_installAvailableUpdate","_cancelInstallingUpdate","_setReaderDisplay","cart","_retrieveSetupIntent","_collectSetupIntentPaymentMethod","_clearReaderDisplay","_cancelSetupIntent","setupIntentId","_confirmSetupIntent","_setSimulatedCard","cardNumber","_simulateReaderUpdate","_collectRefundPaymentMethod","_processRefund","_clearCachedCredentials","_readReusableCard","_cancelCollectPaymentMethod","_cancelCollectRefundPaymentMethod","_cancelCollectSetupIntent","_cancelReadReusableCard","discoverReaders","cancelDiscovering","connectBluetoothReader","disconnectReader","connectInternetReader","connectUsbReader","createPaymentIntent","collectPaymentMethod","retrievePaymentIntent","getLocations","processPayment","createSetupIntent","cancelPaymentIntent","installAvailableUpdate","cancelInstallingUpdate","setReaderDisplay","clearReaderDisplay","retrieveSetupIntent","collectSetupIntentPaymentMethod","cancelSetupIntent","confirmSetupIntent","simulateReaderUpdate","collectRefundPaymentMethod","processRefund","clearCachedCredentials","readReusableCard","cancelCollectPaymentMethod","cancelCollectRefundPaymentMethod","cancelCollectSetupIntent","cancelReadReusableCard","connectHandoffReader","connectLocalMobileReader","setSimulatedCard"],"sources":["useStripeTerminal.tsx"],"sourcesContent":["import { useCallback, useContext } from 'react';\nimport type {\n  DiscoverReadersParams,\n  Reader,\n  ConnectInternetReaderParams,\n  CreatePaymentIntentParams,\n  ConnectBluetoothReaderParams,\n  ConnectUsbReaderParams,\n  GetLocationsParams,\n  Cart,\n  CreateSetupIntentParams,\n  CollectSetupIntentPaymentMethodParams,\n  RefundParams,\n  ReadReusableCardParamsType,\n  ConnectHandoffParams,\n  ConnectLocalMobileParams,\n  CollectPaymentMethodParams,\n  StripeError,\n  PaymentStatus,\n  UserCallbacks,\n  EventResult,\n} from '../types';\nimport {\n  discoverReaders,\n  cancelDiscovering,\n  connectBluetoothReader,\n  disconnectReader,\n  connectInternetReader,\n  connectUsbReader,\n  createPaymentIntent,\n  collectPaymentMethod,\n  retrievePaymentIntent,\n  getLocations,\n  processPayment,\n  createSetupIntent,\n  cancelPaymentIntent,\n  installAvailableUpdate,\n  cancelInstallingUpdate,\n  setReaderDisplay,\n  clearReaderDisplay,\n  retrieveSetupIntent,\n  collectSetupIntentPaymentMethod,\n  cancelSetupIntent,\n  confirmSetupIntent,\n  simulateReaderUpdate,\n  collectRefundPaymentMethod,\n  processRefund,\n  clearCachedCredentials,\n  readReusableCard,\n  cancelCollectPaymentMethod,\n  cancelCollectSetupIntent,\n  cancelReadReusableCard,\n  connectHandoffReader,\n  connectLocalMobileReader,\n  setSimulatedCard,\n  cancelCollectRefundPaymentMethod,\n} from '../functions';\nimport { StripeTerminalContext } from '../components/StripeTerminalContext';\nimport { useListener } from './useListener';\nimport { NativeModules } from 'react-native';\n\nexport const {\n  FETCH_TOKEN_PROVIDER,\n  CHANGE_CONNECTION_STATUS,\n  CHANGE_PAYMENT_STATUS,\n  FINISH_DISCOVERING_READERS,\n  FINISH_INSTALLING_UPDATE,\n  REQUEST_READER_DISPLAY_MESSAGE,\n  REQUEST_READER_INPUT,\n  REPORT_AVAILABLE_UPDATE,\n  REPORT_UNEXPECTED_READER_DISCONNECT,\n  REPORT_UPDATE_PROGRESS,\n  START_INSTALLING_UPDATE,\n  UPDATE_DISCOVERED_READERS,\n} = NativeModules.StripeTerminalReactNative.getConstants();\n\nconst NOT_INITIALIZED_ERROR_MESSAGE =\n  'First initialize the Stripe Terminal SDK before performing any action';\n\n/**\n *  useStripeTerminal hook Props\n */\nexport type Props = UserCallbacks;\n/**\n * useStripeTerminal hook.\n * This hook gives you an acesss to all available SDK methods\n * as well as the state of the current connection\n *\n * @example\n * ```ts\n * const { discoverReaders } = useStripeTerminal({\n *   onUpdateDiscoveredReaders: (readers) => {\n *     setDisoveredReaders(readers)\n *   }\n *   onDidReportReaderSoftwareUpdateProgress: (progress) => {\n *     setCurrentProgress(progress)\n *   }\n * })\n * ```\n */\nexport function useStripeTerminal(props?: Props) {\n  const {\n    setLoading,\n    isInitialized,\n    initialize,\n    setConnectedReader,\n    setDiscoveredReaders,\n    connectedReader,\n    discoveredReaders,\n    loading,\n    emitter,\n    log,\n  } = useContext(StripeTerminalContext);\n\n  const _isInitialized = useCallback(() => isInitialized, [isInitialized]);\n\n  const {\n    onUpdateDiscoveredReaders,\n    onFinishDiscoveringReaders,\n    onDidFinishInstallingUpdate,\n    onDidReportAvailableUpdate,\n    onDidReportReaderSoftwareUpdateProgress,\n    onDidReportUnexpectedReaderDisconnect,\n    onDidStartInstallingUpdate,\n    onDidRequestReaderInput,\n    onDidRequestReaderDisplayMessage,\n    onDidChangePaymentStatus,\n    onDidChangeConnectionStatus,\n  } = props || {};\n\n  const _discoverReaders = useCallback(\n    async (params: DiscoverReadersParams) => {\n      if (!_isInitialized()) {\n        console.error(NOT_INITIALIZED_ERROR_MESSAGE);\n        throw Error(NOT_INITIALIZED_ERROR_MESSAGE);\n      }\n      setLoading(true);\n      const response = await discoverReaders(params);\n      setLoading(false);\n\n      return response;\n    },\n    [_isInitialized, setLoading]\n  );\n\n  // TODO: check why NativeEventListeners are not registering properly if there is no below fix\n  useListener(FETCH_TOKEN_PROVIDER, () => null);\n\n  const didUpdateDiscoveredReaders = useCallback(\n    ({ readers }: { readers: Reader.Type[] }) => {\n      setDiscoveredReaders(readers);\n      onUpdateDiscoveredReaders?.(readers);\n    },\n    [setDiscoveredReaders, onUpdateDiscoveredReaders]\n  );\n\n  const didFinishDiscoveringReaders = useCallback(\n    ({ result }: EventResult<{ error?: StripeError }>) => {\n      onFinishDiscoveringReaders?.(result.error);\n    },\n    [onFinishDiscoveringReaders]\n  );\n\n  const didReportUnexpectedReaderDisconnect = useCallback(\n    ({ error }: { error?: StripeError }) => {\n      setConnectedReader(null);\n      setDiscoveredReaders([]);\n      onDidReportUnexpectedReaderDisconnect?.(error);\n    },\n    [\n      onDidReportUnexpectedReaderDisconnect,\n      setConnectedReader,\n      setDiscoveredReaders,\n    ]\n  );\n\n  const didReportAvailableUpdate = useCallback(\n    ({ result }: EventResult<Reader.SoftwareUpdate>) => {\n      onDidReportAvailableUpdate?.(result);\n    },\n    [onDidReportAvailableUpdate]\n  );\n\n  const didStartInstallingUpdate = useCallback(\n    ({ result }: EventResult<Reader.SoftwareUpdate>) => {\n      onDidStartInstallingUpdate?.(result);\n    },\n    [onDidStartInstallingUpdate]\n  );\n\n  const didReportReaderSoftwareUpdateProgress = useCallback(\n    ({ result }: EventResult<{ progress: string }>) => {\n      onDidReportReaderSoftwareUpdateProgress?.(result.progress);\n    },\n    [onDidReportReaderSoftwareUpdateProgress]\n  );\n\n  const didFinishInstallingUpdate = useCallback(\n    ({\n      result,\n    }: EventResult<Reader.SoftwareUpdate | { error: StripeError }>) => {\n      if ((result as { error: StripeError }).error) {\n        const { error } = result as { error: StripeError };\n\n        onDidFinishInstallingUpdate?.({\n          update: undefined,\n          error: error,\n        });\n      } else {\n        onDidFinishInstallingUpdate?.({\n          update: result as Reader.SoftwareUpdate,\n          error: undefined,\n        });\n      }\n    },\n    [onDidFinishInstallingUpdate]\n  );\n\n  const didRequestReaderInput = useCallback(\n    ({ result }: EventResult<Reader.InputOptions[]>) => {\n      onDidRequestReaderInput?.(result);\n    },\n    [onDidRequestReaderInput]\n  );\n\n  const didRequestReaderDisplayMessage = useCallback(\n    ({ result }: EventResult<Reader.DisplayMessage>) => {\n      onDidRequestReaderDisplayMessage?.(result);\n    },\n    [onDidRequestReaderDisplayMessage]\n  );\n\n  const didChangePaymentStatus = useCallback(\n    ({ result }: EventResult<PaymentStatus>) => {\n      onDidChangePaymentStatus?.(result);\n    },\n    [onDidChangePaymentStatus]\n  );\n\n  const didChangeConnectionStatus = useCallback(\n    ({ result }: EventResult<Reader.ConnectionStatus>) => {\n      onDidChangeConnectionStatus?.(result);\n    },\n    [onDidChangeConnectionStatus]\n  );\n\n  useListener(REPORT_AVAILABLE_UPDATE, didReportAvailableUpdate);\n  useListener(START_INSTALLING_UPDATE, didStartInstallingUpdate);\n  useListener(REPORT_UPDATE_PROGRESS, didReportReaderSoftwareUpdateProgress);\n  useListener(FINISH_INSTALLING_UPDATE, didFinishInstallingUpdate);\n\n  useListener(UPDATE_DISCOVERED_READERS, didUpdateDiscoveredReaders);\n  useListener(FINISH_DISCOVERING_READERS, didFinishDiscoveringReaders);\n  useListener(\n    REPORT_UNEXPECTED_READER_DISCONNECT,\n    didReportUnexpectedReaderDisconnect\n  );\n  useListener(REQUEST_READER_INPUT, didRequestReaderInput);\n  useListener(REQUEST_READER_DISPLAY_MESSAGE, didRequestReaderDisplayMessage);\n  useListener(CHANGE_PAYMENT_STATUS, didChangePaymentStatus);\n  useListener(CHANGE_CONNECTION_STATUS, didChangeConnectionStatus);\n\n  const _initialize = useCallback(async () => {\n    if (!initialize || typeof initialize !== 'function') {\n      const errorMessage =\n        'StripeTerminalProvider component is not found, has not been mounted properly or SDK has not been initialized properly';\n      log('Failed', errorMessage);\n\n      return {\n        error: {\n          code: 'Failed',\n          message: errorMessage,\n        },\n        reader: undefined,\n      };\n    }\n\n    return await initialize();\n  }, [initialize, log]);\n\n  const _cancelDiscovering = useCallback(async () => {\n    if (!_isInitialized()) {\n      console.error(NOT_INITIALIZED_ERROR_MESSAGE);\n      throw Error(NOT_INITIALIZED_ERROR_MESSAGE);\n    }\n    setLoading(true);\n\n    const response = await cancelDiscovering();\n\n    setDiscoveredReaders([]);\n\n    setLoading(false);\n\n    return response;\n  }, [setLoading, setDiscoveredReaders, _isInitialized]);\n\n  const _connectBluetoothReader = useCallback(\n    async (params: ConnectBluetoothReaderParams) => {\n      if (!_isInitialized()) {\n        console.error(NOT_INITIALIZED_ERROR_MESSAGE);\n        throw Error(NOT_INITIALIZED_ERROR_MESSAGE);\n      }\n      setLoading(true);\n\n      const response = await connectBluetoothReader(params);\n\n      if (response.reader && !response.error) {\n        setConnectedReader(response.reader);\n      }\n      setLoading(false);\n\n      return response;\n    },\n    [setConnectedReader, setLoading, _isInitialized]\n  );\n\n  const _connectInternetReader = useCallback(\n    async (params: ConnectInternetReaderParams) => {\n      if (!_isInitialized()) {\n        console.error(NOT_INITIALIZED_ERROR_MESSAGE);\n        throw Error(NOT_INITIALIZED_ERROR_MESSAGE);\n      }\n      setLoading(true);\n\n      const response = await connectInternetReader(params);\n\n      if (response.reader) {\n        setConnectedReader(response.reader);\n      }\n      setLoading(false);\n\n      return response;\n    },\n    [setConnectedReader, setLoading, _isInitialized]\n  );\n\n  const _connectUsbReader = useCallback(\n    async (params: ConnectUsbReaderParams) => {\n      if (!_isInitialized()) {\n        console.error(NOT_INITIALIZED_ERROR_MESSAGE);\n        throw Error(NOT_INITIALIZED_ERROR_MESSAGE);\n      }\n      setLoading(true);\n\n      const response = await connectUsbReader(params);\n\n      if (response.reader && !response.error) {\n        setConnectedReader(response.reader);\n      }\n      setLoading(false);\n\n      return response;\n    },\n    [_isInitialized, setConnectedReader, setLoading]\n  );\n\n  const _connectLocalMobileReader = useCallback(\n    async (params: ConnectLocalMobileParams) => {\n      if (!_isInitialized()) {\n        console.error(NOT_INITIALIZED_ERROR_MESSAGE);\n        throw Error(NOT_INITIALIZED_ERROR_MESSAGE);\n      }\n      setLoading(true);\n\n      const response = await connectLocalMobileReader(params);\n\n      if (response.reader) {\n        setConnectedReader(response.reader);\n      }\n      setLoading(false);\n\n      return response;\n    },\n    [_isInitialized, setConnectedReader, setLoading]\n  );\n\n  const _connectHandoffReader = useCallback(\n    async (params: ConnectHandoffParams) => {\n      if (!_isInitialized()) {\n        console.error(NOT_INITIALIZED_ERROR_MESSAGE);\n        throw Error(NOT_INITIALIZED_ERROR_MESSAGE);\n      }\n      setLoading(true);\n\n      const response = await connectHandoffReader(params);\n\n      if (response.reader) {\n        setConnectedReader(response.reader);\n      }\n      setLoading(false);\n\n      return response;\n    },\n    [_isInitialized, setConnectedReader, setLoading]\n  );\n\n  const _disconnectReader = useCallback(async () => {\n    if (!_isInitialized()) {\n      console.error(NOT_INITIALIZED_ERROR_MESSAGE);\n      return;\n    }\n    setLoading(true);\n\n    const response = await disconnectReader();\n\n    if (!response.error) {\n      setConnectedReader(null);\n      setDiscoveredReaders([]);\n    }\n\n    setLoading(false);\n\n    return response;\n  }, [setLoading, setConnectedReader, setDiscoveredReaders, _isInitialized]);\n\n  const _createPaymentIntent = useCallback(\n    async (params: CreatePaymentIntentParams) => {\n      if (!_isInitialized()) {\n        console.error(NOT_INITIALIZED_ERROR_MESSAGE);\n        throw Error(NOT_INITIALIZED_ERROR_MESSAGE);\n      }\n      setLoading(true);\n\n      const response = await createPaymentIntent(params);\n\n      setLoading(false);\n\n      return response;\n    },\n    [setLoading, _isInitialized]\n  );\n\n  const _collectPaymentMethod = useCallback(\n    async (params: CollectPaymentMethodParams) => {\n      if (!_isInitialized()) {\n        console.error(NOT_INITIALIZED_ERROR_MESSAGE);\n        throw Error(NOT_INITIALIZED_ERROR_MESSAGE);\n      }\n      setLoading(true);\n\n      const response = await collectPaymentMethod(params);\n\n      setLoading(false);\n\n      return response;\n    },\n    [setLoading, _isInitialized]\n  );\n\n  const _retrievePaymentIntent = useCallback(\n    async (clientSecret: string) => {\n      if (!_isInitialized()) {\n        console.error(NOT_INITIALIZED_ERROR_MESSAGE);\n        throw Error(NOT_INITIALIZED_ERROR_MESSAGE);\n      }\n      setLoading(true);\n\n      const response = await retrievePaymentIntent(clientSecret);\n\n      setLoading(false);\n\n      return response;\n    },\n    [setLoading, _isInitialized]\n  );\n\n  const _getLocations = useCallback(\n    async (params: GetLocationsParams) => {\n      if (!_isInitialized()) {\n        console.error(NOT_INITIALIZED_ERROR_MESSAGE);\n        throw Error(NOT_INITIALIZED_ERROR_MESSAGE);\n      }\n      setLoading(true);\n\n      const response = await getLocations(params);\n\n      setLoading(false);\n\n      return response;\n    },\n    [setLoading, _isInitialized]\n  );\n\n  const _processPayment = useCallback(\n    async (paymentIntentId: string) => {\n      if (!_isInitialized()) {\n        console.error(NOT_INITIALIZED_ERROR_MESSAGE);\n        throw Error(NOT_INITIALIZED_ERROR_MESSAGE);\n      }\n      setLoading(true);\n\n      const response = await processPayment(paymentIntentId);\n\n      setLoading(false);\n\n      return response;\n    },\n    [setLoading, _isInitialized]\n  );\n\n  const _createSetupIntent = useCallback(\n    async (params: CreateSetupIntentParams) => {\n      if (!_isInitialized()) {\n        console.error(NOT_INITIALIZED_ERROR_MESSAGE);\n        throw Error(NOT_INITIALIZED_ERROR_MESSAGE);\n      }\n      setLoading(true);\n\n      const response = await createSetupIntent(params);\n\n      setLoading(false);\n\n      return response;\n    },\n    [_isInitialized, setLoading]\n  );\n\n  const _cancelPaymentIntent = useCallback(\n    async (paymentIntentId: string) => {\n      if (!_isInitialized()) {\n        console.error(NOT_INITIALIZED_ERROR_MESSAGE);\n        throw Error(NOT_INITIALIZED_ERROR_MESSAGE);\n      }\n      setLoading(true);\n\n      const response = await cancelPaymentIntent(paymentIntentId);\n\n      setLoading(false);\n\n      return response;\n    },\n    [setLoading, _isInitialized]\n  );\n\n  const _installAvailableUpdate = useCallback(async () => {\n    if (!_isInitialized()) {\n      console.error(NOT_INITIALIZED_ERROR_MESSAGE);\n      throw Error(NOT_INITIALIZED_ERROR_MESSAGE);\n    }\n    setLoading(true);\n\n    const response = await installAvailableUpdate();\n\n    setLoading(false);\n\n    return response;\n  }, [setLoading, _isInitialized]);\n\n  const _cancelInstallingUpdate = useCallback(async () => {\n    if (!_isInitialized()) {\n      console.error(NOT_INITIALIZED_ERROR_MESSAGE);\n      throw Error(NOT_INITIALIZED_ERROR_MESSAGE);\n    }\n    setLoading(true);\n\n    const response = await cancelInstallingUpdate();\n    setLoading(false);\n\n    return response;\n  }, [setLoading, _isInitialized]);\n\n  const _setReaderDisplay = useCallback(\n    async (cart: Cart) => {\n      if (!_isInitialized()) {\n        console.error(NOT_INITIALIZED_ERROR_MESSAGE);\n        throw Error(NOT_INITIALIZED_ERROR_MESSAGE);\n      }\n      setLoading(true);\n\n      const response = await setReaderDisplay(cart);\n      setLoading(false);\n\n      return response;\n    },\n    [setLoading, _isInitialized]\n  );\n\n  const _retrieveSetupIntent = useCallback(\n    async (clientSecret: string) => {\n      if (!_isInitialized()) {\n        console.error(NOT_INITIALIZED_ERROR_MESSAGE);\n        throw Error(NOT_INITIALIZED_ERROR_MESSAGE);\n      }\n      setLoading(true);\n\n      const response = await retrieveSetupIntent(clientSecret);\n\n      setLoading(false);\n\n      return response;\n    },\n    [setLoading, _isInitialized]\n  );\n\n  const _collectSetupIntentPaymentMethod = useCallback(\n    async (params: CollectSetupIntentPaymentMethodParams) => {\n      if (!_isInitialized()) {\n        console.error(NOT_INITIALIZED_ERROR_MESSAGE);\n        throw Error(NOT_INITIALIZED_ERROR_MESSAGE);\n      }\n      setLoading(true);\n\n      const response = await collectSetupIntentPaymentMethod(params);\n      setLoading(false);\n\n      return response;\n    },\n    [setLoading, _isInitialized]\n  );\n\n  const _clearReaderDisplay = useCallback(async () => {\n    if (!_isInitialized()) {\n      console.error(NOT_INITIALIZED_ERROR_MESSAGE);\n      throw Error(NOT_INITIALIZED_ERROR_MESSAGE);\n    }\n    setLoading(true);\n\n    const response = await clearReaderDisplay();\n\n    setLoading(false);\n\n    return response;\n  }, [setLoading, _isInitialized]);\n\n  const _cancelSetupIntent = useCallback(\n    async (setupIntentId: string) => {\n      if (!_isInitialized()) {\n        console.error(NOT_INITIALIZED_ERROR_MESSAGE);\n        throw Error(NOT_INITIALIZED_ERROR_MESSAGE);\n      }\n      setLoading(true);\n\n      const response = await cancelSetupIntent(setupIntentId);\n\n      setLoading(false);\n\n      return response;\n    },\n    [setLoading, _isInitialized]\n  );\n\n  const _confirmSetupIntent = useCallback(\n    async (setupIntentId: string) => {\n      if (!_isInitialized()) {\n        console.error(NOT_INITIALIZED_ERROR_MESSAGE);\n        throw Error(NOT_INITIALIZED_ERROR_MESSAGE);\n      }\n      setLoading(true);\n\n      const response = await confirmSetupIntent(setupIntentId);\n\n      setLoading(false);\n\n      return response;\n    },\n    [setLoading, _isInitialized]\n  );\n\n  const _setSimulatedCard = useCallback(\n    async (cardNumber: string) => {\n      if (!_isInitialized()) {\n        console.error(NOT_INITIALIZED_ERROR_MESSAGE);\n        throw Error(NOT_INITIALIZED_ERROR_MESSAGE);\n      }\n      setLoading(true);\n\n      const response = await setSimulatedCard(cardNumber);\n      setLoading(false);\n\n      return response;\n    },\n    [_isInitialized, setLoading]\n  );\n\n  const _simulateReaderUpdate = useCallback(\n    async (update: Reader.SimulateUpdateType) => {\n      if (!_isInitialized()) {\n        console.error(NOT_INITIALIZED_ERROR_MESSAGE);\n        throw Error(NOT_INITIALIZED_ERROR_MESSAGE);\n      }\n      setLoading(true);\n\n      const response = await simulateReaderUpdate(update);\n      setLoading(false);\n\n      return response;\n    },\n    [setLoading, _isInitialized]\n  );\n\n  const _collectRefundPaymentMethod = useCallback(\n    async (params: RefundParams) => {\n      if (!_isInitialized()) {\n        console.error(NOT_INITIALIZED_ERROR_MESSAGE);\n        throw Error(NOT_INITIALIZED_ERROR_MESSAGE);\n      }\n      setLoading(true);\n\n      const response = await collectRefundPaymentMethod(params);\n\n      setLoading(false);\n\n      return response;\n    },\n    [setLoading, _isInitialized]\n  );\n\n  const _processRefund = useCallback(async () => {\n    if (!_isInitialized()) {\n      console.error(NOT_INITIALIZED_ERROR_MESSAGE);\n      throw Error(NOT_INITIALIZED_ERROR_MESSAGE);\n    }\n    setLoading(true);\n\n    const response = await processRefund();\n\n    setLoading(false);\n\n    return response;\n  }, [setLoading, _isInitialized]);\n\n  const _clearCachedCredentials = useCallback(async () => {\n    setLoading(true);\n\n    const response = await clearCachedCredentials();\n\n    setLoading(false);\n\n    return response;\n  }, [setLoading]);\n\n  const _readReusableCard = useCallback(\n    async (params: ReadReusableCardParamsType) => {\n      if (!_isInitialized()) {\n        console.error(NOT_INITIALIZED_ERROR_MESSAGE);\n        throw Error(NOT_INITIALIZED_ERROR_MESSAGE);\n      }\n      setLoading(true);\n\n      const response = await readReusableCard(params);\n\n      setLoading(false);\n\n      return response;\n    },\n    [setLoading, _isInitialized]\n  );\n\n  const _cancelCollectPaymentMethod = useCallback(async () => {\n    if (!_isInitialized()) {\n      console.error(NOT_INITIALIZED_ERROR_MESSAGE);\n      throw Error(NOT_INITIALIZED_ERROR_MESSAGE);\n    }\n    setLoading(true);\n\n    const response = await cancelCollectPaymentMethod();\n\n    setLoading(false);\n\n    return response;\n  }, [setLoading, _isInitialized]);\n\n  const _cancelCollectRefundPaymentMethod = useCallback(async () => {\n    if (!_isInitialized()) {\n      console.error(NOT_INITIALIZED_ERROR_MESSAGE);\n      throw Error(NOT_INITIALIZED_ERROR_MESSAGE);\n    }\n    setLoading(true);\n\n    const response = await cancelCollectRefundPaymentMethod();\n\n    setLoading(false);\n\n    return response;\n  }, [_isInitialized, setLoading]);\n\n  const _cancelCollectSetupIntent = useCallback(async () => {\n    if (!_isInitialized()) {\n      console.error(NOT_INITIALIZED_ERROR_MESSAGE);\n      throw Error(NOT_INITIALIZED_ERROR_MESSAGE);\n    }\n    setLoading(true);\n\n    const response = await cancelCollectSetupIntent();\n\n    setLoading(false);\n\n    return response;\n  }, [_isInitialized, setLoading]);\n\n  const _cancelReadReusableCard = useCallback(async () => {\n    if (!_isInitialized()) {\n      console.error(NOT_INITIALIZED_ERROR_MESSAGE);\n      throw Error(NOT_INITIALIZED_ERROR_MESSAGE);\n    }\n    setLoading(true);\n\n    const response = await cancelReadReusableCard();\n\n    setLoading(false);\n\n    return response;\n  }, [_isInitialized, setLoading]);\n\n  return {\n    initialize: _initialize,\n    discoverReaders: _discoverReaders,\n    cancelDiscovering: _cancelDiscovering,\n    connectBluetoothReader: _connectBluetoothReader,\n    disconnectReader: _disconnectReader,\n    connectInternetReader: _connectInternetReader,\n    connectUsbReader: _connectUsbReader,\n    createPaymentIntent: _createPaymentIntent,\n    collectPaymentMethod: _collectPaymentMethod,\n    retrievePaymentIntent: _retrievePaymentIntent,\n    getLocations: _getLocations,\n    processPayment: _processPayment,\n    createSetupIntent: _createSetupIntent,\n    cancelPaymentIntent: _cancelPaymentIntent,\n    installAvailableUpdate: _installAvailableUpdate,\n    cancelInstallingUpdate: _cancelInstallingUpdate,\n    setReaderDisplay: _setReaderDisplay,\n    clearReaderDisplay: _clearReaderDisplay,\n    retrieveSetupIntent: _retrieveSetupIntent,\n    collectSetupIntentPaymentMethod: _collectSetupIntentPaymentMethod,\n    cancelSetupIntent: _cancelSetupIntent,\n    confirmSetupIntent: _confirmSetupIntent,\n    simulateReaderUpdate: _simulateReaderUpdate,\n    collectRefundPaymentMethod: _collectRefundPaymentMethod,\n    processRefund: _processRefund,\n    clearCachedCredentials: _clearCachedCredentials,\n    readReusableCard: _readReusableCard,\n    cancelCollectPaymentMethod: _cancelCollectPaymentMethod,\n    cancelCollectRefundPaymentMethod: _cancelCollectRefundPaymentMethod,\n    cancelCollectSetupIntent: _cancelCollectSetupIntent,\n    cancelReadReusableCard: _cancelReadReusableCard,\n    connectHandoffReader: _connectHandoffReader,\n    connectLocalMobileReader: _connectLocalMobileReader,\n    setSimulatedCard: _setSimulatedCard,\n    emitter: emitter,\n    discoveredReaders,\n    connectedReader,\n    isInitialized,\n    loading,\n  };\n}\n"],"mappings":"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"}