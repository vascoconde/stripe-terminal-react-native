var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;var _extends2=_interopRequireDefault(require("@babel/runtime/helpers/extends"));var _toConsumableArray2=_interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));var _classCallCheck2=_interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));var _createClass2=_interopRequireDefault(require("@babel/runtime/helpers/createClass"));var _regenerator=_interopRequireDefault(require("@babel/runtime/regenerator"));var packageJson=_interopRequireWildcard(require("../../package.json"));var _reactNative=require("react-native");var _b64EncodeDecode=require("./utils/b64EncodeDecode");function _getRequireWildcardCache(nodeInterop){if(typeof WeakMap!=="function")return null;var cacheBabelInterop=new WeakMap();var cacheNodeInterop=new WeakMap();return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop;})(nodeInterop);}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule){return obj;}if(obj===null||typeof obj!=="object"&&typeof obj!=="function"){return{default:obj};}var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj)){return cache.get(obj);}var newObj={};var hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj){if(key!=="default"&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;if(desc&&(desc.get||desc.set)){Object.defineProperty(newObj,key,desc);}else{newObj[key]=obj[key];}}}newObj.default=obj;if(cache){cache.set(obj,newObj);}return newObj;}var getDeviceInfo=function getDeviceInfo(){var _Platform$select;return{device_class:'POS',host_os_version:_reactNative.Platform.Version.toString(),hardware_model:{pos_info:{description:(_Platform$select=_reactNative.Platform.select({ios:'iOS',android:'Android'}))==null?void 0:_Platform$select.toString()}}};};var buildGatorRequest=function buildGatorRequest(method,requestPayload,sessionToken){return{id:Date.now(),service:'GatorService',method:method,content:(0,_b64EncodeDecode.b64EncodeUnicode)(JSON.stringify(requestPayload)),session_token:sessionToken||'',version_info:{client_type:'RN_SDK',client_version:packageJson.version},parent_trace_id:'',device_info:getDeviceInfo()};};var sendGatorRequest=function _callee(request){var url;return _regenerator.default.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:url='https://gator.stripe.com:443/protojsonservice/GatorService';return _context.abrupt("return",fetch(url,{method:'POST',headers:{'Accept':'application/json','Content-Type':'application/json'},body:JSON.stringify(request)}));case 2:case"end":return _context.stop();}}},null,null,null,Promise);};var Logger=function(){function Logger(){(0,_classCallCheck2.default)(this,Logger);this._traces=[];setInterval(Logger.flushTraces,10*1000);}(0,_createClass2.default)(Logger,null,[{key:"getInstance",value:function getInstance(){if(Logger.instance===null){Logger.instance=new Logger();}return Logger.instance;}},{key:"traceSdkMethod",value:function traceSdkMethod(fn,methodName){return function constructTrace(){var method=methodName||fn.name;var action_id=""+Math.floor(Math.random()*100000000);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}var baseTraceObject={origin_role:'pos-rn',origin_id:Logger.posId,trace:{action_id:action_id,request_info:{user_agent:''},start_time_ms:Date.now(),total_time_ms:0,service:'StripeTerminalReactNative',method:method,request:JSON.stringify({args:args}),version_info:{client_type:'RN_SDK',client_version:packageJson.version},traces:[],additional_context:{action_id:action_id,session_id:'',serial_number:''}}};var response=fn.apply(this,args);if(response instanceof Promise){Logger.tracePromise(baseTraceObject,response);return response;}if('error'in response){Logger.traceError(baseTraceObject,response);return response;}Logger.traceSuccess(baseTraceObject,JSON.stringify(response));return response;};}},{key:"flushTraces",value:function flushTraces(){if(Logger.getInstance()._traces.length===0){return;}var req=buildGatorRequest('reportTrace',{proxy_traces:(0,_toConsumableArray2.default)(Logger.getInstance()._traces)},'');sendGatorRequest(req).then(function(_resp){Logger.getInstance()._traces=[];});var eventRequest=buildGatorRequest('reportEvent',{proxy_events:Logger.getEventPayload()},'');sendGatorRequest(eventRequest).then(function(_resp){Logger.getInstance()._traces=[];});}},{key:"getEventPayload",value:function getEventPayload(){return Logger.getInstance()._traces.map(function(trace){var _trace$trace,_trace$trace2;return{origin_role:'pos-rn',origin_id:Logger.posId,event:{domain:'Tracer',scope:'e',event:trace==null?void 0:(_trace$trace=trace.trace)==null?void 0:_trace$trace.method,result:trace!=null&&(_trace$trace2=trace.trace)!=null&&_trace$trace2.exception?'ERROR':'OK'}};});}},{key:"tracePromise",value:function tracePromise(baseTraceObject,response){var clonedTraceBase=(0,_extends2.default)({},baseTraceObject);response.then(function(resp){if('error'in resp&&resp.error){Logger.traceError(clonedTraceBase,resp);return;}var responseString=JSON.stringify(resp);Logger.traceSuccess(clonedTraceBase,responseString);}).catch(function(e){Logger.traceException(clonedTraceBase,e);});}},{key:"traceSuccess",value:function traceSuccess(baseTraceObject,response){var trace=(0,_extends2.default)({},baseTraceObject,{trace:(0,_extends2.default)({},baseTraceObject.trace,{response:response})});Logger.getInstance()._traces.push(trace);}},{key:"traceError",value:function traceError(baseTraceObject,response){var trace=(0,_extends2.default)({},baseTraceObject,{trace:(0,_extends2.default)({},baseTraceObject.trace,{exception:JSON.stringify(response.error),response:JSON.stringify(response)})});Logger.getInstance()._traces.push(trace);}},{key:"traceException",value:function traceException(baseTraceObject,exception){var trace=(0,_extends2.default)({},baseTraceObject,{trace:(0,_extends2.default)({},baseTraceObject.trace,{exception:exception.message,status_code:exception.cause,response:JSON.stringify(exception)})});Logger.getInstance()._traces.push(trace);}}]);return Logger;}();exports.default=Logger;Logger.instance=null;Logger.posId="pos-"+Math.random().toString(36).substring(2);
//# sourceMappingURL=logger.js.map