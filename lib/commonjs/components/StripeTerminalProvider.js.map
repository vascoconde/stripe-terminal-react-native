{"version":3,"names":["NativeModules","StripeTerminalReactNative","getConstants","FETCH_TOKEN_PROVIDER","CHANGE_CONNECTION_STATUS","CHANGE_PAYMENT_STATUS","FINISH_DISCOVERING_READERS","FINISH_INSTALLING_UPDATE","REQUEST_READER_DISPLAY_MESSAGE","REQUEST_READER_INPUT","REPORT_AVAILABLE_UPDATE","REPORT_UNEXPECTED_READER_DISCONNECT","REPORT_UPDATE_PROGRESS","START_INSTALLING_UPDATE","UPDATE_DISCOVERED_READERS","emitter","EventEmitter","TOKEN_PROVIDER_ERROR_MESSAGE","StripeTerminalProvider","children","tokenProvider","logLevel","isInitialized","setIsInitialized","loading","setLoading","connectedReader","setConnectedReader","discoveredReaders","setDiscoveredReaders","log","code","message","console","didUpdateDiscoveredReaders","readers","emit","didFinishDiscoveringReaders","result","error","didReportUnexpectedReaderDisconnect","didReportAvailableUpdate","didStartInstallingUpdate","didReportReaderSoftwareUpdateProgress","progress","didFinishInstallingUpdate","didRequestReaderInput","didRequestReaderDisplayMessage","didChangePaymentStatus","didChangeConnectionStatus","tokenProviderHandler","connectionToken","undefined","_initialize","CommonError","Failed","response","reader","value","initialize"],"sources":["StripeTerminalProvider.tsx"],"sourcesContent":["import React, { useCallback, useState, useMemo } from 'react';\nimport {\n  Reader,\n  LogLevel,\n  CommonError,\n  StripeError,\n  EventResult,\n  PaymentStatus,\n} from '../types';\nimport { StripeTerminalContext } from './StripeTerminalContext';\nimport { initialize, setConnectionToken } from '../functions';\nimport { useListener } from '../hooks/useListener';\nimport { NativeModules } from 'react-native';\nimport EventEmitter from 'react-native/Libraries/vendor/emitter/EventEmitter';\n\nconst {\n  FETCH_TOKEN_PROVIDER,\n  CHANGE_CONNECTION_STATUS,\n  CHANGE_PAYMENT_STATUS,\n  FINISH_DISCOVERING_READERS,\n  FINISH_INSTALLING_UPDATE,\n  REQUEST_READER_DISPLAY_MESSAGE,\n  REQUEST_READER_INPUT,\n  REPORT_AVAILABLE_UPDATE,\n  REPORT_UNEXPECTED_READER_DISCONNECT,\n  REPORT_UPDATE_PROGRESS,\n  START_INSTALLING_UPDATE,\n  UPDATE_DISCOVERED_READERS,\n} = NativeModules.StripeTerminalReactNative.getConstants();\n\nconst emitter = new EventEmitter();\n\nconst TOKEN_PROVIDER_ERROR_MESSAGE =\n  \"Couldn't fetch connection token. Please check your tokenProvider method\";\n\n/**\n *  StripeTerminalProvider Component Props\n */\nexport interface Props {\n  children: React.ReactElement | React.ReactElement[];\n  /*\n   You must set a token provider before calling any Stripe terminal method.\n   This should fetch a connection token from your server and return it as a string.\n    * @example\n    * ```ts\n    * const fetchTokenProvider = async () => {\n    *   const response = await fetch('http://api_url/connection_token');\n    *   const { secret } = await response.json();\n    *   return secret;\n    * };\n    * ```\n   */\n  tokenProvider: () => Promise<string>;\n  logLevel?: LogLevel;\n}\n\n/**\n *  StripeTerminalProvider Component\n *\n * @example\n * ```ts\n *  <StripeTerminalProvider tokenProvider={tokenProvider}>\n *    <App />\n *  </StripeTerminalProvider>\n * ```\n * @param __namedParameters Props\n * @returns JSX.Element\n * @category ReactComponents\n */\nexport function StripeTerminalProvider({\n  children,\n  tokenProvider,\n  logLevel,\n}: Props) {\n  const [isInitialized, setIsInitialized] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [connectedReader, setConnectedReader] = useState<Reader.Type | null>();\n  const [discoveredReaders, setDiscoveredReaders] = useState<Reader.Type[]>([]);\n\n  const log = useCallback(\n    (code: string, message?: any) => {\n      if (logLevel === 'verbose') {\n        console.log(`[Stripe terminal]: ${code}`, message);\n      }\n    },\n    [logLevel]\n  );\n\n  const didUpdateDiscoveredReaders = useCallback(\n    ({ readers }: { readers: Reader.Type[] }) => {\n      log('didUpdateDiscoveredReaders', readers);\n      emitter?.emit(UPDATE_DISCOVERED_READERS, readers);\n    },\n    [log]\n  );\n\n  const didFinishDiscoveringReaders = useCallback(\n    ({ result }: EventResult<{ error?: StripeError }>) => {\n      log('didFinishDiscoveringReaders', result);\n      emitter?.emit(FINISH_DISCOVERING_READERS, result.error);\n    },\n    [log]\n  );\n\n  const didReportUnexpectedReaderDisconnect = useCallback(\n    ({ error }: { error?: StripeError }) => {\n      log('didReportUnexpectedReaderDisconnect', error);\n      emitter?.emit(REPORT_UNEXPECTED_READER_DISCONNECT, error);\n    },\n    [log]\n  );\n\n  const didReportAvailableUpdate = useCallback(\n    ({ result }: EventResult<Reader.SoftwareUpdate>) => {\n      log('didReportAvailableUpdate', result);\n      emitter?.emit(REPORT_AVAILABLE_UPDATE, result);\n    },\n    [log]\n  );\n\n  const didStartInstallingUpdate = useCallback(\n    ({ result }: EventResult<Reader.SoftwareUpdate>) => {\n      log('didStartInstallingUpdate', result);\n      emitter?.emit(START_INSTALLING_UPDATE, result);\n    },\n    [log]\n  );\n\n  const didReportReaderSoftwareUpdateProgress = useCallback(\n    ({ result }: EventResult<{ progress: string }>) => {\n      log('didReportReaderSoftwareUpdateProgress', result);\n      emitter?.emit(REPORT_UPDATE_PROGRESS, result.progress);\n    },\n    [log]\n  );\n\n  const didFinishInstallingUpdate = useCallback(\n    ({\n      result,\n    }: EventResult<Reader.SoftwareUpdate | { error: StripeError }>) => {\n      log('didFinishInstallingUpdate', result);\n      emitter?.emit(FINISH_INSTALLING_UPDATE, result);\n    },\n    [log]\n  );\n\n  const didRequestReaderInput = useCallback(\n    ({ result }: EventResult<Reader.InputOptions[]>) => {\n      log('didRequestReaderInput', result);\n      emitter?.emit(REQUEST_READER_INPUT, result);\n    },\n    [log]\n  );\n\n  const didRequestReaderDisplayMessage = useCallback(\n    ({ result }: EventResult<Reader.DisplayMessage>) => {\n      log('didRequestReaderDisplayMessage', result);\n      emitter?.emit(REQUEST_READER_DISPLAY_MESSAGE, result);\n    },\n    [log]\n  );\n\n  const didChangePaymentStatus = useCallback(\n    ({ result }: EventResult<PaymentStatus>) => {\n      log('didChangePaymentStatus', result);\n      emitter?.emit(CHANGE_PAYMENT_STATUS, result);\n    },\n    [log]\n  );\n\n  const didChangeConnectionStatus = useCallback(\n    ({ result }: EventResult<Reader.ConnectionStatus>) => {\n      log('didChangeConnectionStatus', result);\n      emitter?.emit(CHANGE_CONNECTION_STATUS, result);\n    },\n    [log]\n  );\n\n  useListener(REPORT_AVAILABLE_UPDATE, didReportAvailableUpdate);\n  useListener(START_INSTALLING_UPDATE, didStartInstallingUpdate);\n  useListener(REPORT_UPDATE_PROGRESS, didReportReaderSoftwareUpdateProgress);\n  useListener(FINISH_INSTALLING_UPDATE, didFinishInstallingUpdate);\n\n  useListener(UPDATE_DISCOVERED_READERS, didUpdateDiscoveredReaders);\n  useListener(FINISH_DISCOVERING_READERS, didFinishDiscoveringReaders);\n  useListener(\n    REPORT_UNEXPECTED_READER_DISCONNECT,\n    didReportUnexpectedReaderDisconnect\n  );\n  useListener(REQUEST_READER_INPUT, didRequestReaderInput);\n  useListener(REQUEST_READER_DISPLAY_MESSAGE, didRequestReaderDisplayMessage);\n  useListener(CHANGE_PAYMENT_STATUS, didChangePaymentStatus);\n  useListener(CHANGE_CONNECTION_STATUS, didChangeConnectionStatus);\n\n  const tokenProviderHandler = async () => {\n    try {\n      const connectionToken = await tokenProvider();\n\n      setConnectionToken(connectionToken);\n    } catch (error) {\n      setConnectionToken(undefined, TOKEN_PROVIDER_ERROR_MESSAGE);\n\n      console.error(error);\n      console.error(TOKEN_PROVIDER_ERROR_MESSAGE);\n    }\n  };\n\n  useListener(FETCH_TOKEN_PROVIDER, tokenProviderHandler);\n\n  const _initialize = useCallback(async () => {\n    setLoading(true);\n\n    // test tokenProvider method since native SDK's doesn't fetch it on init\n    try {\n      await tokenProvider();\n    } catch (error) {\n      console.error(TOKEN_PROVIDER_ERROR_MESSAGE);\n      console.error(error);\n\n      return {\n        error: {\n          code: CommonError.Failed,\n          message: TOKEN_PROVIDER_ERROR_MESSAGE,\n        },\n      };\n    }\n\n    const response = await initialize({ logLevel });\n\n    if (response.error) {\n      log(response.error.code, response.error.message);\n    } else if (response.reader) {\n      log('Connected to the reader: ', response.reader);\n      setConnectedReader(response.reader);\n    }\n\n    if (!response.error) {\n      setIsInitialized(true);\n    }\n\n    setLoading(false);\n\n    return response;\n  }, [logLevel, tokenProvider, log]);\n\n  const value = useMemo(\n    () => ({\n      loading,\n      isInitialized,\n      connectedReader,\n      discoveredReaders,\n      setIsInitialized,\n      setLoading,\n      setConnectedReader,\n      setDiscoveredReaders,\n      log,\n      initialize: _initialize,\n      emitter,\n    }),\n    [\n      _initialize,\n      loading,\n      isInitialized,\n      connectedReader,\n      discoveredReaders,\n      setIsInitialized,\n      setLoading,\n      setConnectedReader,\n      setDiscoveredReaders,\n      log,\n    ]\n  );\n\n  return (\n    <StripeTerminalContext.Provider value={value}>\n      {children}\n    </StripeTerminalContext.Provider>\n  );\n}\n"],"mappings":"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"}