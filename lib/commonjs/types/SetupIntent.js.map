{"version":3,"names":["IOS","Android","SetupIntent"],"sources":["SetupIntent.ts"],"sourcesContent":["import type { PaymentMethodType } from './';\n\nexport namespace SetupIntent {\n  export type Type = Android.Type &\n    IOS.Type & {\n      id: string;\n      created: string;\n      status: Status;\n      latestAttempt: SetupAttempt;\n      usage: Usage;\n    };\n\n  export type Status =\n    | 'canceled'\n    | 'processing'\n    | 'requiresAction'\n    | 'requiresConfirmation'\n    | 'requiresPaymentMethod'\n    | 'succeeded'\n    | 'unknown';\n\n  export type Usage = 'offSession' | 'onSession';\n\n  export type SetupAttempt = IOS.SetupAttempt &\n    Android.SetupAttempt & {\n      id: string;\n      created?: number;\n      status: string;\n      customer?: string;\n      setupIntentId?: string;\n      paymentMethodDetails: SetupAttemptPaymentMethodDetails;\n      onBehalfOfId?: string;\n      applicationId?: string;\n      paymentMethodId?: string;\n    };\n\n  export interface SetupAttemptPaymentMethodDetails {\n    cardPresent: SetupAttemptCardPresentDetails;\n    interacPresent: SetupAttemptCardPresentDetails;\n    type: PaymentMethodType;\n  }\n\n  export interface SetupAttemptCardPresentDetails {\n    emvAuthData: string;\n    generatedCard: string;\n  }\n\n  export namespace IOS {\n    export type SetupAttempt = {};\n\n    export type Type = {};\n  }\n\n  export namespace Android {\n    export type SetupAttempt = {\n      isLiveMode: boolean;\n      usage?: Usage;\n    };\n\n    export type Type = {\n      applicationId?: string;\n      clientSecret?: string;\n      description?: string;\n      mandateId?: string;\n      onBehalfOfId?: string;\n      paymentMethodId?: string;\n      singleUseMandateId?: string;\n    };\n  }\n}\n"],"mappings":"uLA+CmBA,G,GAAAA,G,cAAAA,G,gBAAAA,G,0CAMAC,O,GAAAA,O,cAAAA,O,gBAAAA,O,UAnDFC,W,uBAAAA,W"}